<?xml version="1.0" encoding="utf-8"?>
<Project>
  <!-- Standard properties. -->
  <PropertyGroup>
    <OutputType Condition="'$(OutputType)' == ''">Library</OutputType>
    <RootNamespace Condition="'$(RootNamespace)' == ''">$(AssemblyName)</RootNamespace>

    <Configurations>Debug;Release;DebugLegacy;ReleaseLegacy</Configurations>
    <Configuration Condition="'$(Configuration)' == ''">Debug</Configuration>
    <Platform Condition="'$(Platform)' == ''">Any CPU</Platform>
    <DebugType Condition="'$(DebugType)' == ''">portable</DebugType>
    <OutputPath>bin\$(Configuration)</OutputPath>

    <LangVersion>7.3</LangVersion>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>

    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <Externalconsole>true</Externalconsole>

    <AppendTargetFrameworkToOutputPath>true</AppendTargetFrameworkToOutputPath>
    <AppendRuntimeIdentifierToOutputPath>false</AppendRuntimeIdentifierToOutputPath>
    <GenerateAssemblyInfo>true</GenerateAssemblyInfo>
    <GenerateDocumentation Condition="'$(GenerateDocumentation)' == ''">true</GenerateDocumentation>
    <DocumentationFile Condition="'$(DocumentationFile)' == ''">$(OutputPath)\$(AssemblyName).xml</DocumentationFile>

    <IsCecilLegacy>false</IsCecilLegacy>

    <IsNETFramework>false</IsNETFramework>
    <IsNETStandard>false</IsNETStandard>

    <MonoModSourceLink Condition="'$(MonoModSourceLink)' == '' And '$(MSBuildRuntimeType)' != 'Core'">false</MonoModSourceLink>
    <MonoModSourceLink Condition="'$(MonoModSourceLink)' == ''">true</MonoModSourceLink>

    <MonoModSharedShims Condition="'$(MonoModSharedShims)' == ''">true</MonoModSharedShims>

    <DefineConstants>$(AssemblyName.ToUpper().Replace('.', '_'));$(DefineConstants)</DefineConstants>

    <NoWarn>CS1591,$(NoWarn)</NoWarn>
  </PropertyGroup>

  <PropertyGroup Condition="$(MonoModSourceLink)">
    <!-- https://github.com/dotnet/sourcelink -->
    <PublishRepositoryUrl>true</PublishRepositoryUrl>
    <EmbedUntrackedSources>true</EmbedUntrackedSources>
    <IncludeSymbols>true</IncludeSymbols>
    <SymbolPackageFormat>snupkg</SymbolPackageFormat>
  </PropertyGroup>

  <Choose>
    <When Condition="'$(MSBuildRuntimeType)' == 'Core' And '$(OS)' == 'Windows_NT'">
      <!-- Fix dotnet pack not being able to find .NET Framework 3.5 on Windows. -->
      <PropertyGroup>
        <FrameworkPathOverride Condition="'$(TargetFramework)' == 'net35'">$(MSBuildProgramFiles32)\Reference Assemblies\Microsoft\Framework\.NETFramework\v3.5\Profile\Client</FrameworkPathOverride>
      </PropertyGroup>
    </When>
    <When Condition="'$(MSBuildRuntimeType)' == 'Core' And '$(OS)' == 'Unix'">
      <!-- Fix dotnet not being able to find .NET Framework at all outside of Windows. -->
      <!-- With help from https://github.com/dotnet/sdk/issues/335#issuecomment-368669050 -->
      <PropertyGroup Condition="$(TargetFramework.StartsWith('net3')) Or $(TargetFramework.StartsWith('net4'))">
        <MonoLibsPath Condition="'$(MonoLibsPath)' == '' And Exists('/Library/Frameworks/Mono.framework/Versions/Current/lib/mono')">/Library/Frameworks/Mono.framework/Versions/Current/lib/mono</MonoLibsPath>
        <MonoLibsPath Condition="'$(MonoLibsPath)' == '' And Exists('/usr/lib/mono')">/usr/lib/mono</MonoLibsPath>
        <MonoLibsPath Condition="'$(MonoLibsPath)' == '' And Exists('/usr/local/lib/mono')">/usr/local/lib/mono</MonoLibsPath>
      </PropertyGroup>
      <PropertyGroup Condition="'$(MonoLibsPath)' != ''">
        <FrameworkPathOverride Condition="'$(TargetFramework)' == 'net20'">$(MonoLibsPath)/2.0-api</FrameworkPathOverride>
        <!-- 3.5 builds on top of 2.0, unlike other point releases. -->
        <FrameworkPathOverride Condition="'$(TargetFramework)' == 'net35'">$(MonoLibsPath)/2.0-api</FrameworkPathOverride>
        <AssemblySearchPaths Condition="'$(TargetFramework)' == 'net35'">$(MonoLibsPath)/3.5-api;$(AssemblySearchPaths)</AssemblySearchPaths>
        <FrameworkPathOverride Condition="'$(TargetFramework)' == 'net40'">$(MonoLibsPath)/4.0-api</FrameworkPathOverride>
        <FrameworkPathOverride Condition="'$(TargetFramework)' == 'net45'">$(MonoLibsPath)/4.5-api</FrameworkPathOverride>
        <FrameworkPathOverride Condition="'$(TargetFramework)' == 'net451'">$(MonoLibsPath)/4.5.1-api</FrameworkPathOverride>
        <FrameworkPathOverride Condition="'$(TargetFramework)' == 'net452'">$(MonoLibsPath)/4.5.2-api</FrameworkPathOverride>
        <FrameworkPathOverride Condition="'$(TargetFramework)' == 'net46'">$(MonoLibsPath)/4.6-api</FrameworkPathOverride>
        <FrameworkPathOverride Condition="'$(TargetFramework)' == 'net461'">$(MonoLibsPath)/4.6.1-api</FrameworkPathOverride>
        <FrameworkPathOverride Condition="'$(TargetFramework)' == 'net462'">$(MonoLibsPath)/4.6.2-api</FrameworkPathOverride>
        <FrameworkPathOverride Condition="'$(TargetFramework)' == 'net47'">$(MonoLibsPath)/4.7-api</FrameworkPathOverride>
        <FrameworkPathOverride Condition="'$(TargetFramework)' == 'net471'">$(MonoLibsPath)/4.7.1-api</FrameworkPathOverride>
        <EnableFrameworkPathOverride>true</EnableFrameworkPathOverride>
        <!-- Add the Facades directory if it exists. -->
        <AssemblySearchPaths Condition="Exists('$(FrameworkPathOverride)/Facades')">$(FrameworkPathOverride)/Facades;$(AssemblySearchPaths)</AssemblySearchPaths>
      </PropertyGroup>
    </When>
  </Choose>

  <!-- Metadata -->
  <PropertyGroup>
    <Authors>0x0ade</Authors> <!-- Note: This previously said "Maik Macho and collaborators", but with dotnet pack, <Authors> is also the list of owners. -->
    <Version>$([System.DateTime]::Now.ToString(yy.MM.dd)).00</Version> <!-- Devbuild -->
    <Version Condition="'$(BUILD_BUILDNUMBER)' != ''">$(BUILD_BUILDNUMBER)</Version> <!-- Azure Pipelines -->
    <Copyright>Copyright $([System.DateTime]::Now.ToString(yyyy)) Maik Macho</Copyright>
    <PackageTags>MonoMod;assembly;assemblies;module;modules;il;cil;msil;bytecode;reflection;injection;cecil;mono;$(PackageTags)</PackageTags>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <Repository>https://github.com/MonoMod/MonoMod</Repository>
    <PackageProjectUrl>https://github.com/MonoMod</PackageProjectUrl>
    <PackageIconUrl>https://user-images.githubusercontent.com/1200380/47308180-28242880-d631-11e8-89d2-14d86f3db113.png</PackageIconUrl>
  </PropertyGroup>

  <!-- Debug -->
  <PropertyGroup Condition="'$(Configuration)' == 'Debug' Or '$(Configuration)' == 'DebugLegacy'">
    <DebugSymbols>true</DebugSymbols>
    <Optimize>false</Optimize>
    <DefineConstants>DEBUG;TRACE;$(DefineConstants)</DefineConstants>
  </PropertyGroup>

  <!-- Release -->
  <PropertyGroup Condition="'$(Configuration)' == 'Release' Or '$(Configuration)' == 'ReleaseLegacy'">
    <Optimize>true</Optimize>
    <DefineConstants>TRACE;$(DefineConstants)</DefineConstants>
  </PropertyGroup>

  <!-- Legacy -->
  <PropertyGroup Condition="'$(Configuration)' == 'DebugLegacy' Or '$(Configuration)' == 'ReleaseLegacy'">
    <IsCecilLegacy>true</IsCecilLegacy>
  </PropertyGroup>

  <!-- Common references. -->
  <Choose>
    <When Condition="$(TargetFramework.StartsWith('netstandard')) Or $(TargetFramework.StartsWith('netcoreapp'))">
      <!-- .NET Standard -->
      <PropertyGroup>
        <IsNETStandard>true</IsNETStandard>
        <DefineConstants>NETSTANDARD;$(DefineConstants)</DefineConstants>
        <DefineConstants Condition="$(IsCecilLegacy)">CECIL0_10;$(DefineConstants)</DefineConstants>
        <CecilVersion Condition="$(IsCecilLegacy) And '$(CecilVersion)' == ''">0.10.0</CecilVersion>
        <NETShimVersion>4.*</NETShimVersion>
      </PropertyGroup>
      <!-- These are also required when targeting .NET Standard 2.0 to resolve a version conflict with Mono.Cecil's deps. -->
      <ItemGroup>
        <PackageReference Include="System.Reflection.TypeExtensions" Version="$(NETShimVersion)" />
        <PackageReference Include="System.Collections.NonGeneric" Version="$(NETShimVersion)" />
        <PackageReference Include="System.ComponentModel.TypeConverter" Version="$(NETShimVersion)" />
        <PackageReference Include="System.IO.FileSystem.Primitives" Version="$(NETShimVersion)" />
      </ItemGroup>
      <!-- This could be made optional at compile-time, but it's preferred to check for availability at runtime. -->
      <ItemGroup>
        <PackageReference Include="System.Reflection.Emit.Lightweight" Version="$(NETShimVersion)" />
        <PackageReference Include="System.Reflection.Emit.ILGeneration" Version="$(NETShimVersion)" />
      </ItemGroup>
    </When>
    <Otherwise>
      <!-- .NET Framework -->
      <PropertyGroup>
        <IsNETFramework>true</IsNETFramework>
        <DefineConstants>NETFRAMEWORK;$(DefineConstants)</DefineConstants>
        <DefineConstants Condition="$(IsCecilLegacy)">CECIL0_9;$(DefineConstants)</DefineConstants>
        <CecilVersion Condition="$(IsCecilLegacy) And '$(CecilVersion)' == ''">0.9.6</CecilVersion>
      </PropertyGroup>
      <ItemGroup>
        <!-- <Reference Include="mscorlib" /> -->
        <Reference Include="System" />
      </ItemGroup>
    </Otherwise>
  </Choose>

  <!-- Mono.Cecil - added to each csproj manually for GitHub dependency graph. -->
  <!--
  <ItemGroup>
    <PackageReference Include="Mono.Cecil" Version="0.10.*">
      <Version Condition="'$(CecilVersion)' != ''">$(CecilVersion)</Version>
    </PackageReference>
  </ItemGroup>
  -->

  <!-- Source Link -->
  <ItemGroup Condition="$(MonoModSourceLink)">
    <PackageReference Include="Microsoft.SourceLink.GitHub" Version="1.0.0-beta2-19270-01" PrivateAssets="All" />
  </ItemGroup>

  <!-- Shared source files. -->
  <ItemGroup Condition="$(MonoModSharedShims)">
    <Compile Include="..\MonoMod.Common\Shared\**\*.cs" />
  </ItemGroup>
</Project>