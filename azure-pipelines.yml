# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/vsts/pipelines/apps/windows/dot-net

pool:
  vmImage: 'VS2017-Win2016'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

name: '$(Date:yy.MM.dd)$(Rev:.rr)'

steps:
- task: DotNetCoreInstaller@0
  inputs:
    packageType: 'sdk'
    version: '2.0.0'

- task: DotNetCoreCLI@2
  inputs:
    command: 'restore'
    projects: 'MonoMod*/*.csproj'

- task: PowerShell@2
  inputs:
    filePath: 'azure-pipelines-prebuild.ps1'

- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    projects: 'MonoMod*/*.csproj'
    configuration: '$(buildConfiguration)'

- task: VSTest@2
  continueOnError: true
  inputs:
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

# Create and "publish" main artifacts.
- template: 'azure-pipelines-postbuild.yml'
  parameters:
    targetFramework: 'net35'

- template: 'azure-pipelines-postbuild.yml'
  parameters:
    targetFramework: 'netstandard16'

- template: 'azure-pipelines-postbuild.yml'
  parameters:
    targetFramework: 'netstandard20'

# Create and "publish" nupkg artifacts.
- task: DotNetCoreCLI@2
  inputs:
    command: 'pack'
    configuration: 'Release'
    versioningScheme: 'byBuildNumber'
    packagesToPack: 'MonoMod@(|.Utils|.RuntimeDetour)/*.csproj'
    packDirectory: '$(Build.ArtifactStagingDirectory)/nupkgs'
- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: '$(Build.ArtifactStagingDirectory)/nupkgs'
    artifactName: 'nupkgs'
    publishLocation: 'Container'
